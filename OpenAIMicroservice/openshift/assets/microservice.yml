apiVersion: apps/v1
kind: Deployment
metadata:
  name: openai-microservice-deployment
  namespace: bramterlouw-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      name: openai-microservice-deployment
      app: openai-microservice-app
      project: language-fitness
  template:
    metadata:
      labels:
        name: openai-microservice-deployment
        app: openai-microservice-app
        project: language-fitness
    spec:
      containers:
        - name: openai-microservice
          image: microservice_image
          ports:
            - containerPort: 4000
          resources:
            limits:
              memory: 60Mi
              cpu: 50m
            requests:
              memory: 40Mi
              cpu: 20m
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/health/ready"
              port: 4000
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: "/health/live"
              port: 4000
---
kind: Service
apiVersion: v1
metadata:
  name: openai-microservice-service
  namespace: bramterlouw-dev
  annotations:
    description: Exposes and load balances the application pods
  labels:
    name: openai-microservice-service
    app: openai-microservice-app
    project: language-fitness
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 4000
      targetPort: 4000
  selector:
    name: openai-microservice-deployment
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: openai-microservice-hpa
  namespace: bramterlouw-dev
  labels:
    name: openai-microservice-hpa
    app: openai-microservice-app
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: openai-microservice-deployment