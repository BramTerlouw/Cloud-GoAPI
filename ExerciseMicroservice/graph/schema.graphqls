# GraphQL schema example
#
# https://gqlgen.com/getting-started/

input ExerciseFilter {
  name: String
  softDelete: Boolean
  difficulty: difficulty
  question_type_id: ID
  class_Id: ID
  module_id: ID
  made_by: ID
}

input Paginator {
  amount: Int!
  Step: Int!
}

enum difficulty{
  A1
  A2
  B1
  B2
  C1
  C2
}

type Exercise {
  id: ID!
  class_Id: ID!
  module_id: ID!
  name: String!
  question: String!
  answers: String!
  pos_correct_answer: Int!
  question_type_id: ID!
  difficulty: difficulty!
  created_at: String!
  updated_at: String!
  soft_deleted: Boolean!
  made_by: ID!
}

input ExerciseInput {
  class_Id: ID!
  module_id: ID!
  name: String!
  question: String!
  answers: String!
  pos_correct_answer: Int!
  question_type_id: ID!
  difficulty: difficulty!
}

type Query {
  GetExercise(ExerciseId: ID!): Exercise
  ListExercise(filter: ExerciseFilter!, paginator: Paginator!): [Exercise]
}

type Mutation {
  CreateExercise(exercise: ExerciseInput!): Exercise
  UpdateExercise(id: ID!, exercise: ExerciseInput!): Exercise
  DeleteExercise(ExerciseID: ID!): Exercise
}


#go mod init example
#go get github.com/99designs/gqlgen
#go run github.com/99designs/gqlgen init
#
#
#!!als je wilt generaten nadat je schema.graphqls heb aangepast!!
#go get github.com/99designs/gqlgen@v0.17.40
#go run github.com/99designs/gqlgen generate