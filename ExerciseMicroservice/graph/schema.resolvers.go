package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"ExerciseMicroservice/graph/model"
	"context"
	"fmt"
)

// CreateExercise is the resolver for the CreateExercise field.
func (r *mutationResolver) CreateExercise(ctx context.Context, exercise model.ExerciseInput) (*model.Exercise, error) {
	panic(fmt.Errorf("not implemented: CreateExercise - CreateExercise"))
}

// UpdateExercise is the resolver for the UpdateExercise field.
func (r *mutationResolver) UpdateExercise(ctx context.Context, exercise model.ExerciseInput) (*model.Exercise, error) {
	panic(fmt.Errorf("not implemented: UpdateExercise - UpdateExercise"))
}

// DeleteExercise is the resolver for the DeleteExercise field.
func (r *mutationResolver) DeleteExercise(ctx context.Context, id string) (*model.Exercise, error) {
	panic(fmt.Errorf("not implemented: DeleteExercise - DeleteExercise"))
}

// GetExercise is the resolver for the GetExercise field.
func (r *queryResolver) GetExercise(ctx context.Context, exerciseID string) ([]*model.Exercise, error) {
	panic(fmt.Errorf("not implemented: GetExercise - GetExercise"))
}

// ListExercise is the resolver for the ListExercise field.
func (r *queryResolver) ListExercise(ctx context.Context) ([]*model.Exercise, error) {
	panic(fmt.Errorf("not implemented: ListExercise - ListExercise"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
