package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"fmt"
	"saga/graph/model"
)

// DeleteSchool is the resolver for the deleteSchool field.
func (r *mutationResolver) DeleteSchool(ctx context.Context, filter *model.SagaFilter) (*model.SuccessMessage, error) {
	panic(fmt.Errorf("not implemented: DeleteSchool - deleteSchool"))
}

// DeleteClass is the resolver for the deleteClass field.
func (r *mutationResolver) DeleteClass(ctx context.Context, filter *model.SagaFilter) (*model.SuccessMessage, error) {
	panic(fmt.Errorf("not implemented: DeleteClass - deleteClass"))
}

// DeleteExercise is the resolver for the deleteExercise field.
func (r *mutationResolver) DeleteExercise(ctx context.Context, filter *model.SagaFilter) (*model.SuccessMessage, error) {
	panic(fmt.Errorf("not implemented: DeleteExercise - deleteExercise"))
}

// DeleteResult is the resolver for the deleteResult field.
func (r *mutationResolver) DeleteResult(ctx context.Context, filter *model.SagaFilter) (*model.SuccessMessage, error) {
	panic(fmt.Errorf("not implemented: DeleteResult - deleteResult"))
}

// DeleteModule is the resolver for the deleteModule field.
func (r *mutationResolver) DeleteModule(ctx context.Context, filter *model.SagaFilter) (*model.SuccessMessage, error) {
	panic(fmt.Errorf("not implemented: DeleteModule - deleteModule"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
