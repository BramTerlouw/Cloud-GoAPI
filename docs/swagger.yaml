basePath: /
definitions:
  dto.LoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role_id:
        type: string
      school_id:
        type: string
      settings:
        type: string
      whitelist_module:
        items:
          type: integer
        type: array
    type: object
  response.ErrorResponseDTO:
    properties:
      error:
        type: string
      errorType:
        type: string
      statusCode:
        type: integer
      statusText:
        type: string
    type: object
  response.LoginResponseDTO:
    properties:
      bearer_token:
        type: string
    type: object
  response.UserResponseDTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      ratings:
        type: string
      role_id:
        type: string
      school_id:
        type: string
      settings:
        type: string
      soft_deleted:
        type: string
      updated_at:
        type: string
      whitelist_module:
        items:
          type: integer
        type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Api used for the Cloud minor project - Language Fitness controllers..
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cloud Minor - Go - Gin API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with credentials
      parameters:
      - description: Login data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      summary: Log in to get a bearer token
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserResponseDTO'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      security:
      - BearerAuth: []
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      security:
      - BearerAuth: []
      summary: Add new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      security:
      - BearerAuth: []
      summary: Remove one user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponseDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      security:
      - BearerAuth: []
      summary: Get one user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Patch user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseDTO'
      security:
      - BearerAuth: []
      summary: Update one user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
