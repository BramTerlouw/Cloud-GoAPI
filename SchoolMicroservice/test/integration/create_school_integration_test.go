package integration

import (
	"encoding/json"
	"fmt"
	"github.com/99designs/gqlgen/client"
	"github.com/stretchr/testify/assert"
	"school/test/integration/helper"
	"school/test/integration/requests"
	r "school/test/integration/responses"
	"strings"
	"testing"
)

var Token = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuMzNESXZyQUZ0b1JGQ1d2UTMyOF85bXpjeU5JbXptZ1NSNFVKM05rdEdRIn0.eyJleHAiOjE3MDUzNTI4NTgsImlhdCI6MTcwNTM1MTk1OCwianRpIjoiZjk0MGRmM2QtMmMzNi00ZTZhLWJjZjQtMzk2MDIzZDlhMWMwIiwiaXNzIjoiaHR0cHM6Ly9leGFtcGxlLWtleWNsb2FrLWJyYW10ZXJsb3V3LWRldi5hcHBzLm9jcDItaW5ob2xsYW5kLmpvcmFuLWJlcmdmZWxkLmNvbS9yZWFsbXMvY2xvdWQtcHJvamVjdCIsImF1ZCI6WyJyZWFsbS1tYW5hZ2VtZW50IiwidXNlci1tYW5hZ2VtZW50LWNsaWVudCIsImFjY291bnQiXSwic3ViIjoiNmMxY2U0NDgtNjcwZi00N2IyLTgzZjctNGQ3NzFiMDE3NzViIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tY2xpZW50Iiwic2Vzc2lvbl9zdGF0ZSI6IjliN2E4ZjI3LWNmZTAtNDllMy1hZGQxLWFiY2Y2ZTdlOWNkMiIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1jbG91ZC1wcm9qZWN0Iiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7InJlYWxtLW1hbmFnZW1lbnQiOnsicm9sZXMiOlsibWFuYWdlLXVzZXJzIiwidmlldy11c2VycyIsInF1ZXJ5LWdyb3VwcyIsInF1ZXJ5LXVzZXJzIl19LCJ1c2VyLW1hbmFnZW1lbnQtY2xpZW50Ijp7InJvbGVzIjpbImZpbHRlcl9yZXN1bHRfc29mdERlbGV0ZSIsImZpbHRlcl9jbGFzc19kaWZmaWN1bHR5IiwiZmlsdGVyX2V4ZXJjaXNlX2RpZmZpY3VsdHkiLCJmaWx0ZXJfc2Nob29sX25hbWUiLCJ1cGRhdGVfcmVzdWx0IiwiZmlsdGVyX2V4ZXJjaXNlX21vZHVsZV9pZCIsImZpbHRlcl9tb2R1bGVfY2F0ZWdvcnkiLCJkZWxldGVfbW9kdWxlX2FsbCIsImNyZWF0ZV9leGVyY2lzZSIsImdldF9zY2hvb2wiLCJmaWx0ZXJfc2Nob29sX2xvY2F0aW9uIiwiZmlsdGVyX21vZHVsZV9kaWZmaWN1bHR5IiwiZmlsdGVyX3Jlc3VsdF9tb2R1bGVfaWQiLCJvcGVuYWlfZ2VuZXJhdGVfcXVlc3Rpb25zIiwiZ2V0X21vZHVsZSIsImdldF9tb2R1bGVzIiwiZmlsdGVyX3NjaG9vbF9zb2Z0RGVsZXRlIiwiZGVsZXRlX3Jlc3VsdF9hbGwiLCJ1cGRhdGVfbW9kdWxlX2FsbCIsImZpbHRlcl9jbGFzc19tb2R1bGVfaWQiLCJjcmVhdGVfcmVzdWx0IiwiZ2V0X3Jlc3VsdF9hbGwiLCJmaWx0ZXJfbW9kdWxlX21hZGVfYnkiLCJsaXN0X3Jlc3VsdHNfYWxsIiwiZmlsdGVyX2V4ZXJjaXNlX3F1ZXN0aW9uX3R5cGVfaWQiLCJ1cGRhdGVfY2xhc3NfYWxsIiwiZ2V0X2NsYXNzIiwiZ2V0X3NjaG9vbHNfYWxsIiwiZmlsdGVyX3Jlc3VsdF9leGVyY2lzZV9pZCIsImZpbHRlcl9jbGFzc19zb2Z0RGVsZXRlIiwidXBkYXRlX3Jlc3VsdF9hbGwiLCJvcGVuYWlfZ2VuZXJhdGVfcXVlc3Rpb25zX2Zyb21fZmlsZSIsImdldF9jbGFzc2VzX2FsbCIsInVwZGF0ZV9zY2hvb2wiLCJmaWx0ZXJfc2Nob29sX21hZGVfYnkiLCJnZXRfZXhlcmNpc2VzX2FsbCIsIm9wZW5haV9nZW5lcmF0ZV9leHBsYW5hdGlvbiIsImZpbHRlcl9jbGFzc19tYWRlX2J5IiwiZmlsdGVyX21vZHVsZV9zb2Z0RGVsZXRlIiwiZ2V0X2V4ZXJjaXNlcyIsImdldF9jbGFzc2VzIiwiZGVsZXRlX21vZHVsZSIsImdldF9zY2hvb2xzIiwiZGVsZXRlX2V4ZXJjaXNlIiwidXBkYXRlX2V4ZXJjaXNlIiwiZ2V0X2V4ZXJjaXNlIiwiZmlsdGVyX3Jlc3VsdF91c2VyX2lkIiwiZmlsdGVyX2V4ZXJjaXNlX25hbWUiLCJmaWx0ZXJfZXhlcmNpc2Vfc29mdERlbGV0ZSIsImRlbGV0ZV9leGVyY2lzZV9hbGwiLCJmaWx0ZXJfcmVzdWx0X2NsYXNzX2lkIiwidXBkYXRlX3NjaG9vbF9hbGwiLCJkZWxldGVfY2xhc3MiLCJkZWxldGVfcmVzdWx0IiwiY3JlYXRlX21vZHVsZSIsInVwZGF0ZV9leGVyY2lzZV9hbGwiLCJjcmVhdGVfY2xhc3MiLCJjcmVhdGVfc2Nob29sIiwiZ2V0X21vZHVsZXNfYWxsIiwiZmlsdGVyX2V4ZXJjaXNlX2NsYXNzX2lkIiwibGlzdF9yZXN1bHRzIiwiZmlsdGVyX21vZHVsZV9zY2hvb2xfaWQiLCJmaWx0ZXJfY2xhc3NfbmFtZSIsImdldF9yZXN1bHQiLCJmaWx0ZXJfc2Nob29sX2hhc19vcGVuYWlfYWNjZXNzIiwib3BlbmFpX2dldF9zY2hvb2wiLCJ1cGRhdGVfbW9kdWxlIiwiZmlsdGVyX21vZHVsZV9uYW1lIiwiZmlsdGVyX21vZHVsZV9tYWRlX2J5X25hbWUiLCJmaWx0ZXJfZXhlcmNpc2VfbWFkZV9ieSIsImRlbGV0ZV9zY2hvb2xfYWxsIiwidXBkYXRlX2NsYXNzIiwiZmlsdGVyX21vZHVsZV9wcml2YXRlIiwiZGVsZXRlX2NsYXNzX2FsbCJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwic2lkIjoiOWI3YThmMjctY2ZlMC00OWUzLWFkZDEtYWJjZjZlN2U5Y2QyIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiY2hhZCBhZG1pbiIsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluQGFkbWluLmNvbSIsImdpdmVuX25hbWUiOiJjaGFkIiwiZmFtaWx5X25hbWUiOiJhZG1pbiIsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIn0.buj6L_VMQ0Hl-RJP11bUk64eGIYIutgnFeMCOTzrbLPI0tYu_w4gt0ogvYl5KbwAZTDJQ3AmSnSW1HyUjp44W3btmCkxnVrLbywyAaO2776jEYhlcvGyOJUr922XM2GZPNTg6cJxhVhFTqUodYVO3ay_eg2Peeoky9iVKNu-58N1xYyAke7sJVmMJH0UWNZYs3WAH-_f8hc8nzuLHMl9b6eAl01VRCCaIw5uWpGZEOSCz5i2K1egLBYXElCwDlQBjEZtJr0L0vboHyJmf8J-j18nWWyvyr6fV2vPZ_6GpYd85LocpygQhMIbDEFiXaa5ClPvRHv1MqJjRTI6ID99_A"

var StudentToken = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuMzNESXZyQUZ0b1JGQ1d2UTMyOF85bXpjeU5JbXptZ1NSNFVKM05rdEdRIn0.eyJleHAiOjE3MDUzNTI4ODIsImlhdCI6MTcwNTM1MTk4MiwianRpIjoiM2JhYmRkMmItNDdmNi00NTU5LTg3ZTAtODUzMjYyZTQ1MmFjIiwiaXNzIjoiaHR0cHM6Ly9leGFtcGxlLWtleWNsb2FrLWJyYW10ZXJsb3V3LWRldi5hcHBzLm9jcDItaW5ob2xsYW5kLmpvcmFuLWJlcmdmZWxkLmNvbS9yZWFsbXMvY2xvdWQtcHJvamVjdCIsImF1ZCI6WyJyZWFsbS1tYW5hZ2VtZW50IiwidXNlci1tYW5hZ2VtZW50LWNsaWVudCIsImFjY291bnQiXSwic3ViIjoiM2U4MDVlOTctZmM3Ni00MzI0LWExOTktNDYzZjYwZTQzYjQ0IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibG9naW4tY2xpZW50Iiwic2Vzc2lvbl9zdGF0ZSI6IjYxY2Q0MzE1LTA1YjctNGNmYi05OGQxLWI4N2QyMDZiNWViZCIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1jbG91ZC1wcm9qZWN0Iiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7InJlYWxtLW1hbmFnZW1lbnQiOnsicm9sZXMiOlsidmlldy11c2VycyIsInF1ZXJ5LWdyb3VwcyIsInF1ZXJ5LXVzZXJzIl19LCJ1c2VyLW1hbmFnZW1lbnQtY2xpZW50Ijp7InJvbGVzIjpbImRlbGV0ZV9yZXN1bHQiLCJnZXRfbW9kdWxlIiwiZ2V0X21vZHVsZXMiLCJ1cGRhdGVfcmVzdWx0Iiwib3BlbmFpX2dlbmVyYXRlX2V4cGxhbmF0aW9uIiwiY3JlYXRlX3Jlc3VsdCIsImdldF9leGVyY2lzZXMiLCJmaWx0ZXJfZXhlcmNpc2VfY2xhc3NfaWQiLCJnZXRfY2xhc3NlcyIsImxpc3RfcmVzdWx0cyIsImZpbHRlcl9tb2R1bGVfc2Nob29sX2lkIiwiZ2V0X2V4ZXJjaXNlIiwiZmlsdGVyX3Jlc3VsdF91c2VyX2lkIiwiZ2V0X3Jlc3VsdCIsIm9wZW5haV9nZXRfc2Nob29sIiwiZmlsdGVyX3Jlc3VsdF9jbGFzc19pZCIsImZpbHRlcl9tb2R1bGVfbWFkZV9ieV9uYW1lIiwiZ2V0X2NsYXNzIiwiZmlsdGVyX3Jlc3VsdF9leGVyY2lzZV9pZCIsImZpbHRlcl9yZXN1bHRfbW9kdWxlX2lkIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6ImVtYWlsIHByb2ZpbGUiLCJzaWQiOiI2MWNkNDMxNS0wNWI3LTRjZmItOThkMS1iODdkMjA2YjVlYmQiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsIm5hbWUiOiJNZXJsaWpuIEJ1c2NoIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibWVybGlqbkBzdHVkZW50LmNvbSIsImdpdmVuX25hbWUiOiJNZXJsaWpuIiwiZmFtaWx5X25hbWUiOiJCdXNjaCIsImVtYWlsIjoibWVybGlqbkBzdHVkZW50LmNvbSJ9.ESlBa4L_LxYETqxREzoJVIh4n6GC-TYKgllnHHf-y4zNwomJXCvGI1MdsFi_n8rxCPtiHZjFj0lQQO3STqPrDBM-eKWQONcLx0DG89XWl5hZo57MAnfJGZ5MvDer4AGYMZYFwYk7e8PuKxjMpGABaQ12N2L80uzOLRbl7ME8zt-nKpFJJ_9O5x2jRyKNJuNc58lKCtGzcTEg1YzJJQZ0g-5u_bwr6gcULcFQVudawnZgj-_al9NEAGWCjP7mJOoJlZcr3fL6ndCpw8boN778bjsTu9_ZQH6z5i3I7341wLAaQBrmXpfZDNpgw-xsJ2wFHxrrQ7NeHkuC0i19APnxOg"

func TestResolver_CreateSchool(t *testing.T) {
	fmt.Println("\nRunning TestResolver_CreateSchool")
	c := helper.CreateClient()

	t.Run("Create school", func(t *testing.T) {

		c.MustPost(
			requests.CreateSchoolMutation,
			&r.CreateSchoolResponse,
			client.Var("input", requests.GenerateSchoolInput()),
			helper.AddContext(Token),
		)

		assert.NotEmpty(t, r.CreateSchoolResponse)
		assert.NotEmpty(t, r.CreateSchoolResponse.CreateSchool.ID)
		assert.Equal(t, requests.Name, r.CreateSchoolResponse.CreateSchool.Name)
		assert.Equal(t, requests.Location, r.CreateSchoolResponse.CreateSchool.Location)
		assert.Equal(t, requests.HasOpenaiAccess, r.CreateSchoolResponse.CreateSchool.HasOpenaiAccess)
		assert.Equal(t, requests.OpenAIKey, r.CreateSchoolResponse.CreateSchool.OpenaiKey)
	})
}

func TestResolver_CreateSchool_NoOpenAiAccess(t *testing.T) {
	fmt.Println("\nRunning TestResolver_CreateSchool_NoOpenAiAccess")
	c := helper.CreateClient()

	t.Run("Create school", func(t *testing.T) {

		c.MustPost(
			requests.CreateSchoolMutation,
			&r.CreateSchoolResponse,
			client.Var("input", requests.GenerateSchoolInputNoAccess()),
			helper.AddContext(Token),
		)

		assert.NotEmpty(t, r.CreateSchoolResponse)
		assert.NotEmpty(t, r.CreateSchoolResponse.CreateSchool.ID)
		assert.Equal(t, requests.Name, r.CreateSchoolResponse.CreateSchool.Name)
		assert.Equal(t, requests.Location, r.CreateSchoolResponse.CreateSchool.Location)
		assert.Equal(t, false, r.CreateSchoolResponse.CreateSchool.HasOpenaiAccess)
		assert.Equal(t, "", r.CreateSchoolResponse.CreateSchool.OpenaiKey)
	})
}

func TestResolver_CreateSchool_NoAdminToken(t *testing.T) {
	fmt.Println("\nRunning TestResolver_CreateSchool_NoAdminToken")
	c := helper.CreateClient()

	t.Run("Create school", func(t *testing.T) {

		err := c.Post(
			requests.CreateSchoolMutation,
			&r.CreateSchoolResponse,
			client.Var("input", requests.GenerateSchoolInput()),
			helper.AddContext(StudentToken),
		)

		assert.NotNil(t, err)

		var errorResponse []r.ErrorType
		err2 := json.NewDecoder(strings.NewReader(err.Error())).Decode(&errorResponse)
		assert.Nil(t, err2)

		assert.Equal(t, r.InvalidPermissionResponseError, errorResponse[0].Message)
	})
}
