package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"example/graph/model"
	"fmt"
)

// CreateSchool is the resolver for the createSchool field.
func (r *mutationResolver) CreateSchool(ctx context.Context, input model.SchoolInput) (*model.School, error) {
	panic(fmt.Errorf("not implemented: CreateSchool - createSchool"))
}

// UpdateSchool is the resolver for the updateSchool field.
func (r *mutationResolver) UpdateSchool(ctx context.Context, id string, input model.SchoolInput) (*model.School, error) {
	panic(fmt.Errorf("not implemented: UpdateSchool - updateSchool"))
}

// DeleteSchool is the resolver for the deleteSchool field.
func (r *mutationResolver) DeleteSchool(ctx context.Context, id string) (*string, error) {
	panic(fmt.Errorf("not implemented: DeleteSchool - deleteSchool"))
}

// GetSchool is the resolver for the getSchool field.
func (r *queryResolver) GetSchool(ctx context.Context, id string) (*model.School, error) {
	panic(fmt.Errorf("not implemented: GetSchool - getSchool"))
}

// ListSchools is the resolver for the listSchools field.
func (r *queryResolver) ListSchools(ctx context.Context) ([]*model.School, error) {
	panic(fmt.Errorf("not implemented: ListSchools - listSchools"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
