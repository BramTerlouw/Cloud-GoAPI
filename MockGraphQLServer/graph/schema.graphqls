# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# GraphQL schema example
#
# https://gqlgen.com/getting-started/
type School {
  id: ID!
  name: String!
  location: String!
  made_by: ID!
  created_at: String
  updated_at: String
  soft_deleted: Boolean
}

type SchoolInfo {
  id: ID!
  name: String!
  location: String!
  made_by: ID!
}

type Module {
  id: ID!
  name: String!
  description: String!
  difficulty: Int!
  category: String!
  made_by: ID!
  private: Boolean!
  key: String
  created_at: String
  updated_at: String
  soft_deleted: Boolean
}

type ModuleInfo {
  id: ID!
  name: String!
  description: String!
  difficulty: Int!
  category: String!
  made_by: String!
  private: Boolean!
}

type Class {
  id: ID!
  module_Id: ID!
  name: String!
  description: String!
  difficulty: Int!
  made_by: ID!
  created_at: String
  updated_at: String
  soft_deleted: Boolean
}

type ClassInfo {
  id: ID!
  module_Id: ID!
  name: String!
  description: String!
  difficulty: Int!
  made_by: String!
}

type Exercise {
  id: ID!
  class_Id: ID!
  name: String!
  question: String!
  answers: String!
  pos_correct_answer: Int!
  question_type_id: ID!
  difficulty: Float!
  created_at: String
  updated_at: String
  soft_deleted: Boolean
}

type ExerciseInfo {
  id: ID!
  class_Id: ID!
  name: String!
  question: String!
  answers: String!
  pos_correct_answer: Int!
  question_type_id: ID!
  difficulty: Float!
}

type Result {
  id: ID!
  exercise_id: ID!
  user_id: ID!
  class_id: ID!
  module_id: ID!
  input: String!
  result: String!
  created_at: String
  updated_at: String
  soft_deleted: Boolean
}

type LeaderboardRow {
  id: ID!
  name: String!
  rating: Int!
  position: Int!
}

type Query {
  getModule(id: ID!): Module
  listModules: [ModuleInfo]
  getClass(id: ID!): Class
  listClasses: [ClassInfo]
  getExercise(id: ID!): Exercise
  listExercises: [ExerciseInfo]
  getResultsByClass(classId: ID!): [Result]
  getLeaderBord: [LeaderboardRow]
  getSchool(id: ID!): School
  listSchools: [SchoolInfo]
}

input NewResult {
  exercise_id: ID!
  user_id: ID!
  class_id: ID!
  module_id: ID!
  input: String!
  result: String!
}

type Mutation {
  createResult(input: NewResult): Result!
}